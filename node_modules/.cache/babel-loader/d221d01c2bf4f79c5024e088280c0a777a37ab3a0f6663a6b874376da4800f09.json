{"ast":null,"code":"import HeaderDarkmode from \"@/components/header/HeaderDarkmode.vue\";\nimport HeaderIdiomas from \"@/components/header/HeaderIdiomas.vue\";\nexport default {\n  name: \"HeaderMain\",\n  components: {\n    HeaderDarkmode,\n    HeaderIdiomas\n  },\n  data() {\n    return {\n      shouldShowLinks: false,\n      isOpen: false\n    };\n  },\n  mounted() {\n    this.checkScreenWidth();\n    window.addEventListener(\"resize\", this.checkScreenWidth);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.checkScreenWidth);\n  },\n  methods: {\n    toggle() {\n      this.isOpen = !this.isOpen;\n    },\n    checkScreenWidth() {\n      this.shouldShowLinks = window.innerWidth >= 768;\n    }\n  }\n};","map":{"version":3,"names":["HeaderDarkmode","HeaderIdiomas","name","components","data","shouldShowLinks","isOpen","mounted","checkScreenWidth","window","addEventListener","destroyed","removeEventListener","methods","toggle","innerWidth"],"sources":["C:\\Users\\danie\\Documents\\GitHub\\daniel\\src\\components\\header\\HeaderMain.vue"],"sourcesContent":["<template>\r\n  <div class=\"header__main\">\r\n    <ul class=\"header__links\">\r\n      <li class=\"header__links-wrapper\">Home</li>\r\n      <li class=\"header__links-wrapper\">About</li>\r\n      <li class=\"header__links-wrapper\">Projetcs</li>\r\n      <li class=\"header__links-wrapper\">contato</li>\r\n    </ul>\r\n    <HeaderHamburger/>\r\n    <!--\r\n    <div class=\"header__main-hamburguer\"  @click=\"toggle()\">\r\n      <label class=\"hamburger\">\r\n        <input type=\"checkbox\">\r\n        <svg viewBox=\"0 0 32 32\">\r\n          <path class=\"line line-top-bottom\" d=\"M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22\"></path>\r\n          <path class=\"line\" d=\"M7 16 27 16\"></path>\r\n        </svg>\r\n      </label>\r\n    </div>\r\n    -->\r\n    <HeaderDarkmode v-if=\"shouldShowLinks\"/>\r\n    <HeaderIdiomas v-if=\"shouldShowLinks\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderDarkmode from \"@/components/header/HeaderDarkmode.vue\"\r\nimport HeaderIdiomas from \"@/components/header/HeaderIdiomas.vue\"\r\nexport default {\r\n  name: \"HeaderMain\",\r\n  components:{\r\n    HeaderDarkmode,\r\n    HeaderIdiomas,\r\n  },\r\n  data(){\r\n    return {\r\n      shouldShowLinks: false,\r\n      isOpen: false,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.checkScreenWidth();\r\n    window.addEventListener(\"resize\", this.checkScreenWidth);\r\n    \r\n  },\r\n  destroyed(){\r\n    window.removeEventListener(\"resize\", this.checkScreenWidth);\r\n  },\r\n  methods: {\r\n    toggle() {\r\n      this.isOpen = !this.isOpen;\r\n    },\r\n    checkScreenWidth() {\r\n      this.shouldShowLinks = window.innerWidth >= 768;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .header__main {\r\n    width: 50%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    gap: 1.25rem;\r\n    .header__links {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n      background-color:red;\r\n      @media screen and (max-width: 768px){\r\n        display: none;\r\n      }\r\n\r\n    }\r\n    .header__main-hamburguer { \r\n      .hamburger {\r\n        cursor: pointer;\r\n\r\n        input {\r\n          display: none;\r\n        }\r\n\r\n        svg {\r\n          /* O tamanho do SVG define o tamanho geral */\r\n          height: 3em;\r\n          /* Define a transição para transformar o SVG */\r\n          transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        }\r\n\r\n        .line {\r\n          fill: none;\r\n          stroke: white;\r\n          stroke-linecap: round;\r\n          stroke-linejoin: round;\r\n          stroke-width: 3;\r\n          /* Define a transição para transformar o Stroke */\r\n          transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),\r\n                      stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        }\r\n\r\n        .line-top-bottom {\r\n          stroke-dasharray: 12 63;\r\n        }\r\n\r\n        input:checked + svg {\r\n          transform: rotate(-45deg);\r\n        }\r\n\r\n        input:checked + svg .line-top-bottom {\r\n          stroke-dasharray: 20 300;\r\n          stroke-dashoffset: -32.42;\r\n        }\r\n      }\r\n      @media screen and (min-width: 768px){\r\n        display: none;\r\n      }\r\n    }\r\n    @media screen and (max-width: 768px){\r\n      width: auto;\r\n\r\n\r\n    }  \r\n  }\r\n</style>\r\n\r\n"],"mappings":"AA0BA,OAAOA,cAAa,MAAO,wCAAuC;AAClE,OAAOC,aAAY,MAAO,uCAAsC;AAChE,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAC;IACTH,cAAc;IACdC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,eAAe,EAAE,KAAK;MACtBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvBC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,gBAAgB,CAAC;EAE1D,CAAC;EACDG,SAASA,CAAA,EAAE;IACTF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,gBAAgB,CAAC;EAC7D,CAAC;EACDK,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACR,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;IAC5B,CAAC;IACDE,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACH,eAAc,GAAII,MAAM,CAACM,UAAS,IAAK,GAAG;IACjD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}